#+TITLE:  High Purity Germanium simulation & analysis
#+AUTHOR: Xavier Garrido
#+DATE:   2014-02-06
#+OPTIONS: ^:{}
#+STARTUP: entitiespretty

* Introduction

This repository holds a configuration to do High Purity Germanium (HPGe)
simulations using Geant4 framework. It also contains a module to plot \gamma energy
distribution from Germanium crystal.

The current version is hosted at
[[https://github.com/xgarrido/snemo_simulation_modules/hpge_simulation]] under
=git= version control. You can clone this repository by doing

#+BEGIN_SRC sh
  git clone https://github.com/xgarrido/snemo_simulation_modules/hpge_simulation hpge_simulation
#+END_SRC

This will create a directory =hpge_validation= in the working directory
containing all the source files needed to configure and to setup SN@ilWare
programs.

* Content

The code is organised as follow :

- =README.org= :: This file holds the pipeline configuration + the documentation
                  on how to use the =hpge_simulation= module.
- =Makefile= :: The =Makefile= allows to generate the pipeline configuration by
                parsing and tangling this file /i.e./ =README.org= (see below).
- =source= :: This directory holds the source code of the =hpge_simulation=
              module. It also has a =CMakeLists.txt= file in order to compile,
              build and install all the software pieces through =cmake= rules.

The =README.org= file is organised using [[http://orgmode.org/worg/org-contrib/babel/index.html][org-babel]] and its ability to execute
source code. It requires then a recent installation of emacs[1] which bundles
=org=. Without entering into too much details regarding =org-babel= abilities,
the basic idea is to give a "literate" way to navigate through the different
sections, each of them representing a part of the pipeline
configuration. Moreover, using =org= folding/unfolding capability, item can be
hide and the user can focus on relevant parts.

To export the different configuration files, you can run =org-babel-tangle=
which will tangle each code block into the given file[2] or use the associated
=Makefile=. The author recommends to use the =Makefile= since the tangling
process is asynchronous and thus, does not freeze your emacs (=org-babel-tangle=
"occupies" emacs during its execution).

[1] At the time of writing this document, emacs version is 24.3.1
[2] Emacs lisp function can be run using =ALT-x= command and typing the function
name.
* Geometry setup
** Manager configuration
:PROPERTIES:
:MKDIRP: yes
:TANGLE: config/geometry/manager.conf
:END:
*** Setup label, description and version
#+BEGIN_SRC sh
  #@description Setup label
  setup_label : string = "hpge_simulation"

  #@description Setup description
  setup_description : string = "The HPGe planar geometry"

  #@description Setup version
  setup_version : string = "1.0"
#+END_SRC
*** Logging priority
#+BEGIN_SRC sh
  #@description Logging priority
  logging.priority : string = "warning"
#+END_SRC
*** Geometry factory
The geometry factory holds all the files needed for the geometry construction.
**** Logging priority
#+BEGIN_SRC sh
  #@description Logging priority of the embedded geometry model factory
  factory.logging.priority : string = "warning"
#+END_SRC

**** Geometry files
#+BEGIN_SRC sh
  #@description List of files describing the geometry models
  factory.geom_files : string[3] as path =        \
    "@HPGE_SIMULATION_DIR@/config/geometry/sources.geom" \
    "@HPGE_SIMULATION_DIR@/config/geometry/planar.geom"  \
    "@HPGE_SIMULATION_DIR@/config/geometry/world.geom"
#+END_SRC

*** ID manager
**** Logging priority
#+BEGIN_SRC sh
  #@description Logging flag of the embedded ID manager
  id_mgr.logging.priority : string = "warning"
#+END_SRC

**** Category list
Categories are used to assign a unique id number (integer) to a geometrical
volume.
#+BEGIN_SRC sh
  #@description Source file of the geometry categories used by the ID manager
  id_mgr.categories_list : string as path = \
    "@HPGE_SIMULATION_DIR@/config/geometry/categories.lis"
#+END_SRC
*** Mapping configuration
#+BEGIN_SRC sh
  #@description Build the embedded default mapping dictionnary
  build_mapping : boolean = 1

  #@description Max depth of the mapping
  mapping.max_depth : integer = 100
#+END_SRC
*** Plugins configuration
#+BEGIN_SRC sh
  #@description Plugins factory preload from system registration (default=0)
  plugins.factory_no_preload : boolean = 0

  #@description Plugins initialization at load (default=0)
  plugins.force_initialization_at_load : boolean = 0

  #@description Configuration files for geometry manager's plugins
  plugins.configuration_files : string[1] as path = \
      "@HPGE_SIMULATION_DIR@/config/geometry/materials_plugin.conf"
#+END_SRC

** Geometry models
*** Source model
:PROPERTIES:
:TANGLE: config/geometry/sources.geom
:END:
**** Preamble
#+BEGIN_SRC sh
  #@description List of geometry models
  #@key_label   "name"
  #@meta_label  "type"
#+END_SRC
**** Petri box
#+BEGIN_SRC sh
  [name="petri_box.model" type="geomtools::simple_shaped_model"]
  shape_type   : string = "cylinder"
  r            : real as length = 2.4 cm
  z            : real as length = 0.1 cm
  material.ref : string = "std::plexiglass"
#+END_SRC
**** Source model

Use standard IEAE RGU-1
#+BEGIN_SRC sh
  [name="source.model" type="geomtools::simple_shaped_model"]
  shape_type   : string =  "cylinder"
  r            : real as length = 2.25 cm
  z            : real as length = 0.3 cm
  material.ref : string = "hpge::SiO2"
#+END_SRC
*** HPGe planar model
:PROPERTIES:
:TANGLE: config/geometry/planar.geom
:END:
**** Preamble
#+BEGIN_SRC sh
  #@description List of geometry models
  #@key_label   "name"
  #@meta_label  "type"
#+END_SRC
**** Germanium model
#+BEGIN_SRC sh
  [name="germanium.model" type="geomtools::simple_shaped_model"]
  shape_type         : string = "cylinder"
  r                  : real as length = 3.985 cm
  z                  : real as length = 3.170 cm
  material.ref       : string = "hpge::germanium"
#+END_SRC
**** Internal lead model
#+BEGIN_SRC sh
  [name="internal_lead.model" type="geomtools::simple_shaped_model"]
  shape_type        : string = "cylinder"
  r                 : real as length = 4.485 cm
  z                 : real as length = 4.500 cm
  material.ref      : string = "std::lead"
#+END_SRC
**** Contact lead
#+BEGIN_SRC sh
  [name="contact_lead.model" type="geomtools::simple_shaped_model"]
  shape_type        : string = "tube"
  outer_r           : real as length = 4.485 cm
  inner_r           : real as length = 3.985 cm
  z                 : real as length = 3.700 cm
  material.ref      : string = "std::lead"
#+END_SRC
**** Support model
#+BEGIN_SRC sh
  [name="support.model" type="geomtools::simple_shaped_model"]
  shape_type  : string = "polycone"
  filled_mode : string = "by_envelope"
  length_unit : string = "mm"

  material.ref        : string = "std::aluminium"
  material.filled.ref : string = "std::vacuum"

  build_mode   : string = "points"
  list_of_z    : real[4] = -42.5  -39.5000001 -39.5   +42.5
  list_of_rmax : real[4] =  48.0   48.0        48.0    48.0
  list_of_rmin : real[4] =   0.0    0.0        44.85   44.85

  internal_item.filled.labels : string[3] = "germanium" "internal_lead" "contact_lead"

  internal_item.filled.model.germanium         : string = "germanium.model"
  internal_item.filled.placement.germanium     : string = "0. 0. 26.65 (mm)"
  mapping.filled.daughter_id.germanium         : string = "[germanium.category]"

  internal_item.filled.model.internal_lead     : string = "internal_lead.model"
  internal_item.filled.placement.internal_lead : string = "0. 0. -17.0 (mm)"
  mapping.filled.daughter_id.internal_lead     : string = "[internal_lead.category]"

  internal_item.filled.model.contact_lead      : string = "contact_lead.model"
  internal_item.filled.placement.contact_lead  : string = "0. 0. 24.0 (mm)"
  mapping.filled.daughter_id.contact_lead      : string = "[contact_lead.category]"
#+END_SRC
**** Front window
#+BEGIN_SRC sh
  [name="front_window.model" type="geomtools::simple_shaped_model"]
  shape_type        : string = "cylinder"
  r                 : real as length = 6.70 cm
  z                 : real as length = 0.18 cm
  material.ref      : string = "std::aluminium"
#+END_SRC
**** Air gap
#+BEGIN_SRC sh
  [name="vacuum_gap.model" type="geomtools::simple_shaped_model"]
  shape_type        : string = "cylinder"
  r                 : real as length = 6.40 cm
  z                 : real as length = 1.42 cm
  material.ref      : string = "std::vacuum"
#+END_SRC
**** Support + window model
#+BEGIN_SRC sh
  [name="support_and_window.model" type="geomtools::stacked_model"]
  material.ref  : string  = "std::vacuum"

  stacked.axis  : string  = "z"
  stacked.number_of_items  : integer = 3

  stacked.model_0 : string = "support.model"
  stacked.label_0 : string = "support"

  stacked.model_1 : string = "vacuum_gap.model"
  stacked.label_1 : string = "vacuum_gap"

  stacked.model_2 : string = "front_window.model"
  stacked.label_2 : string = "front_window"

  mapping.daughter_id.support      : string = "[support.category]"
  mapping.daughter_id.vacuum_gap   : string = "[vacuum_gap.category]"
  mapping.daughter_id.front_window : string = "[front_window.category]"
#+END_SRC
**** Endcap model
#+BEGIN_SRC sh
  [name="endcap.model" type="geomtools::simple_shaped_model"]
  shape_type        : string = "tube"
  outer_r           : real as length =  6.70 cm
  inner_r           : real as length =  6.40 cm
  z                 : real as length = 19.84 mm
  material.ref      : string = "std::aluminium"
#+END_SRC
**** Detector model
#+BEGIN_SRC sh
  [name="detector.model" type="geomtools::simple_shaped_model"]
  logging.priority  : string = "warning"
  shape_type        : string = "cylinder"
  r                 : real as length =  6.8 cm
  z                 : real as length = 20.2 cm
  material.ref      : string  = "std::air"

  internal_item.labels : string[2]  = "support_and_window" "endcap"

  internal_item.model.support_and_window     : string    = "support_and_window.model"
  internal_item.placement.support_and_window : string    = "0 0 50.5 (mm) @ 0 0 0 (deg)"
  mapping.daughter_id.support_and_window     : string    = "[support_and_window.category]"

  internal_item.model.endcap                 : string    = "endcap.model"
  internal_item.placement.endcap             : string    = "0 0 0 (mm) @ 0 0 0 (deg)"
  mapping.daughter_id.endcap                 : string    = "[endcap.category]"
#+END_SRC
**** Full setup model
#+BEGIN_SRC sh
  [name="setup.model" type="geomtools::stacked_model"]
  material.ref  : string  = "std::air"

  stacked.axis            : string  = "z"
  stacked.number_of_items : integer = 3

  stacked.model_0 : string = "detector.model"
  stacked.label_0 : string = "detector"

  stacked.model_1 : string = "petri_box.model"
  stacked.label_1 : string = "petri"

  stacked.model_2 : string = "source.model"
  stacked.label_2 : string = "source"

  mapping.daughter_id.detector : string = "[detector.category]"
  mapping.daughter_id.petri    : string = "[petri.category:box=0]"
  mapping.daughter_id.source   : string = "[source.category:source=0]"
#+END_SRC
*** World volume
:PROPERTIES:
:TANGLE: config/geometry/world.geom
:END:
**** Preamble
#+BEGIN_SRC sh
  #@description List of geometry models
  #@key_label   "name"
  #@meta_label  "type"
#+END_SRC
**** World volume
#+BEGIN_SRC sh
  [name="world" type="geomtools::simple_world_model"]

  #@config configuration parameters for the world logical volume

  #@description The world volume X dimension (box)
  world.x         : real as length = 300.0 mm

  #@description The world volume Y dimension (box)
  world.y         : real as length = 300.0 mm

  #@description The world volume Z dimension (box)
  world.z         : real as length = 800.0 mm

  #@description The name of the model that represents the experimental setup daughter volume
  setup.model     : string = "setup.model"

  #@description The setup placement phi angle
  setup.phi       : real as angle = 0.0 degree

  #@description The setup placement theta angle
  setup.theta     : real as angle = 0.0 degree

  #@description The setup placement X coordinate
  setup.x         : real as length = 0.0 mm

  #@description The setup placement Y coordinate
  setup.y         : real as length = 0.0 mm

  #@description The setup placement Z coordinate
  setup.z         : real as length = 0.0 mm

  #@description The name of the material that fills the world volume
  material.ref    : string = "std::vacuum"

  #@description The mapping directives for the 'setup' daughter volume
  mapping.daughter_id.setup : string  = "[setup.category:volume=0]"
#+END_SRC
** Mapping categories
:PROPERTIES:
:TANGLE: config/geometry/categories.lis
:END:
#+BEGIN_SRC sh
  #@description A sample list of geometry ID categories/types
  #@key_label   "category"
  #@meta_label  "type"

  [category="world"           type="0"]
  addresses : string[1] = "world"

  [category="setup.category" type="2000"]
  addresses : string[1] = "volume"

  [category="detector.category" type="2100"]
  inherits : string[1] = "setup.category"

  [category="source.category" type="2200"]
  addresses : string[1] = "source"

  [category="petri.category" type="2300"]
  addresses : string[1] = "box"

  [category="support_and_window.category" type="1001"]
  inherits : string    = "detector.category"

  [category="endcap.category" type="1002"]
  inherits : string   = "detector.category"

  [category="support.category" type="1003"]
  inherits : string    = "support_and_window.category"

  [category="front_window.category" type="1004"]
  inherits : string   = "support_and_window.category"

  [category="vacuum_gap.category" type="1005"]
  inherits : string    = "support_and_window.category"

  [category="germanium.category" type="1006"]
  inherits : string   = "support.category"

  [category="contact_lead.category" type="1007"]
  inherits : string   = "support.category"

  [category="internal_lead.category" type="1008"]
  inherits : string   = "support.category"
#+END_SRC
** Materials plugin
:PROPERTIES:
:TANGLE: config/geometry/materials_plugin.conf
:END:

We use the definitions of isotopes, elements and materials from the installed
materials library. Here the =materials_aliases= definition are locally defined
to change the source sample isotope.
*** Plugin declaration
#+BEGIN_SRC sh
  #@description The geometry manager plugin for materials

  #@key_label  "name"
  #@meta_label "type"

  [name="materials_driver" type="geomtools::materials_plugin"]
#+END_SRC

*** Logging priority
#+BEGIN_SRC sh
  #@description Logging priority
  logging.priority : string = "warning"
#+END_SRC

*** Files
#+BEGIN_SRC sh
  #@description List of files describing the materials
  materials.files : string[4] as path =   \
      "@materials:data/std_isotopes.def"  \
      "@materials:data/std_elements.def"  \
      "@materials:data/std_materials.def" \
      "@HPGE_SIMULATION_DIR@/config/geometry/hpge_materials.def"
#+END_SRC
*** Material aliases
:PROPERTIES:
:TANGLE: config/geometry/hpge_materials.def
:END:
#+BEGIN_SRC sh
  #@description A list of materials for BiPo experiment
  #@key_label   "name"
  #@meta_label  "type"

  [name="Germanium" type="element"]
  #@description The Ge natural element
  z               : integer   = 32
  isotope.names   : string[5] = "Ge-70" "Ge-72" "Ge-73"  "Ge-74"  "Ge-76"
  isotope.weights : real[5]   = 0.209 0.275  0.077 0.363 0.076


  [name="hpge::germanium" type="material"]
  #@description natural Ge material
  density        : real   = 5.323
  density.unit   : string = "g/cm3"
  state          : string = "solid"
  composition.mode : string   = "fraction_mass"
  composition.names         : string [1]  = "Germanium"
  composition.fraction_mass : real   [1]  =  1.0

  [name="hpge::SiO2" type="material"]
  #@description silica material
  density          : real   = 1.19
  density.unit     : string = "g/cm3"
  state            : string = "solid"
  composition.mode            : string       = "number_of_atoms"
  composition.names           : string  [2]  = "Silicium" "Oxygen"
  composition.number_of_atoms : integer [2]  =     1       2

  [name="hpge::sodium" type="material"]
  #@description Sodium material
  density        : real   = 0.971
  density.unit   : string = "g/cm3"
  state          : string = "solid"
  composition.mode          : string      = "fraction_mass"
  composition.names         : string [1]  = "Sodium"
  composition.fraction_mass : real   [1]  =   1.0

  [name="hpge::manganese" type="material"]
  #@description Manganese material
  density        : real   = 7.44
  density.unit   : string = "g/cm3"
  state          : string = "solid"
  composition.mode          : string      = "fraction_mass"
  composition.names         : string [1]  = "Sodium"
  composition.fraction_mass : real   [1]  =   1.0
#+END_SRC

** Visualization settings
:PROPERTIES:
:MKDIRP: yes
:TANGLE: config/visualization/hpge_simulation.sty
:END:
*** Browser settings
#+BEGIN_SRC sh
  [name="browser_settings"]

  #@description Setup label.
  setup_label : string = "hpge_simulation"

  #@description Tab to view at startup.
  # 0: 3D Display 1: Raw Data 2: Options, 3: Selection
  startup_tab : integer = 0

  # 0: Top view 1: Front view 2: Side view
  startup_2d_view : integer = 0

  #@description Background color of displays.
  background_color : integer[3] =   0   0   0
#+END_SRC
*** Geometry settings
#+BEGIN_SRC sh
  [name="geometry_settings"]

  #@description List of volumes to take care.
  volume_category_list : string[9] = \
      "setup.category"               \
      "endcap.category"              \
      "source.category"              \
      "petri.category"               \
      "support.category"             \
      "germanium.category"           \
      "front_window.category"        \
      "contact_lead.category"        \
      "internal_lead.category"

  #@description Volume visibility (visible/invisible/disable)
  setup.category.visibility         : string = "visible"
  endcap.category.visibility        : string = "visible"
  source.category.visibility        : string = "visible"
  petri.category.visibility         : string = "visible"
  support.category.visibility       : string = "visible"
  germanium.category.visibility     : string = "visible"
  front_window.category.visibility  : string = "visible"
  contact_lead.category.visibility  : string = "visible"
  internal_lead.category.visibility : string = "visible"

  #@description Volume color
  setup.category.color         : integer[3] = 228 123 220
  endcap.category.color        : integer[3] = 158 246 222
  source.category.color        : integer[3] = 141  17  79
  petri.category.color         : integer[3] =  66  43 244
  support.category.color       : integer[3] =  86 111 124
  germanium.category.color     : integer[3] = 236  33 141
  front_window.category.color  : integer[3] = 163  44  34
  contact_lead.category.color  : integer[3] =  90 156 254
  internal_lead.category.color : integer[3] =  90 156 254
#+END_SRC
*** Particle settings
#+BEGIN_SRC sh
    [name="particle_settings"]

    #@description MC particle color
    gamma.color                : string = "kYellow"
    electron.color             : string = "kBlue"
    positron.color             : string = "kCyan"
    alpha.color                : string = "kMagenta"
    delta_ray_from_alpha.color : string = "kGreen"
#+END_SRC
*** Misc.
#+BEGIN_SRC sh
  [name="miscellaneous"]

  #@description MC line style
  mc_line_style : integer = 1
  mc_line_width : integer = 0

  #@description Figure save options
  save.directory : string = "."
  save.extension : string = ".eps"
  save.prefix    : string = "event_"
#+END_SRC

* Pipeline general configuration

SN@ilWare implements the concept of data processing pipeline. An event record
object is passed through a chain of data processing modules, each of them being
responsible for a given task. Modules and services are declared in Section
[[Modules]] and Section [[Services]]. For more details on running SuperNEMO simulations
and the concept behind modules/services see [[http://nile.hep.utexas.edu/cgi-bin/DocDB/ut-nemo/private/ShowDocument?docid=1889][these mandatory presentations]] given
by F. Mauger.

The =@HPGE_SIMULATION_DIR@= corresponds to the directory where configuration
files are going to be stored. This variable which varies from one installation
to the other, is automatically changed when the tangle process occurs. This is
done /via/ the =Makefile= which parse and replace this variable.

** Module manager
:PROPERTIES:
:MKDIRP: yes
:TANGLE: config/pipeline/module_manager.conf
:END:
This file is the main and central piece of code for loading all modules/services
needed by =dpp_processing= binary. It provides links to module files and
service files.
*** Logging priority
#+BEGIN_SRC sh
  #@description Module manager logging priority
  logging.priority : string = "warning"

  #@description Embedded module factory debug flag
  factory.debug : boolean = 0

  #@description Embedded module factory 'no preload' flag
  factory.no_preload : boolean = 0
#+END_SRC

*** Service manager configuration
#+BEGIN_SRC sh
  #@description The configuration file of the embedded service manager
  service_manager.configuration : string[1] as path = \
      "@HPGE_SIMULATION_DIR@/config/pipeline/service_manager.conf"
#+END_SRC

*** Configuration files for modules
#+BEGIN_SRC sh
  #@description The configuration files for modules
  modules.configuration_files : string[2] as path =   \
      "@HPGE_SIMULATION_DIR@/config/pipeline/simulation_modules.conf" \
      "@HPGE_SIMULATION_DIR@/config/pipeline/analysis_modules.conf"
#+END_SRC

** Service manager
:PROPERTIES:
:TANGLE: config/pipeline/service_manager.conf
:END:
*** Logging priority
#+BEGIN_SRC sh
  #@description Service manager logging priority
  logging.priority : string = "warning"
#+END_SRC
*** Name & description
#+BEGIN_SRC sh
  #@description The name of the service manager
  name : string = "hpge_service_manager"

  #@description The description of the service manager
  description : string = "A HPGe service manager"
#+END_SRC
*** List of service files
#+BEGIN_SRC sh
  #@description The list of files that describe services
  services.configuration_files : string[1] as path = \
      "@HPGE_SIMULATION_DIR@/config/pipeline/services.conf"
#+END_SRC

** DLL loader
*** Code generator                                               :noexport:
:PROPERTIES:
:TANGLE:   no
:RESULTS:  output
:END:
This skeleton code ease the declaration of dll loader since it
receives a table list and builds the corresponding =dlls.conf= file.

#+NAME: dll_loader
#+HEADERS: :var name="" :var filename=""
#+BEGIN_SRC sh
  echo '#@description A sample list of setups'
  echo '#@key_label   "name"'
  echo '#@meta_label  "filename"'
  arr_name=(${name})
  arr_filename=($filename)
  for ((i=0; i < ${#arr_name[@]}; i++))
  do
      dll=${arr_name[$i]}
      dllpath=${arr_filename[$i]}
      if [ "$dllpath" != "none" ]; then
          echo '[name="'$dll'" filename="'$dllpath'"]'
      else
          echo '[name="'$dll'" filename=""]'
      fi
      echo '#config The '$dll' library'
      echo 'autoload : boolean = 1'
      echo
  done
#+END_SRC
*** Libraries
:PROPERTIES:
:TANGLE: config/pipeline/dlls.conf
:END:
This part set the different libraries to be loaded at runtime. This is needed
since event data models are defined in other libraries than the one currently
named =hpge_simulation=. The following table sets the libraries

#+CAPTION: Libraries to be used by =hpge_simulation= modules
#+TBLNAME: dll_libraries :results none
|-----------------------+--------------------------------------------------------------|
| hpge_analysis         | @HPGE_SIMULATION_DIR@/source/install/lib/libhpge_analysis.so |
| Bayeux_mctools_geant4 | none                                                         |
|-----------------------+--------------------------------------------------------------|

#+BEGIN_SRC sh :noweb yes
  <<dll_loader(dll_libraries[*,0],dll_libraries[*,1])>>
#+END_SRC
* Modules

The next items hold the configuration to simulate HPGe with Geant4 and the
module configuration to analyse simulated data.

** Simulation module declaration
:PROPERTIES:
:TANGLE: config/pipeline/simulation_modules.conf
:END:

*** File preamble
#+BEGIN_SRC sh
  #@description A sample list of setups
  #@key_label   "name"
  #@meta_label  "type"
#+END_SRC
*** Declaration & description
#+BEGIN_SRC sh
  [name="simulation" type="mctools::g4::simulation_module"]

  #@config 'mctools::g4::simulation_module' configuration parameters for HPGe simulation
#+END_SRC

*** Logging priority
#+BEGIN_SRC sh
  #@description Logging priority
  logging.priority : string = "warning"
#+END_SRC

*** Bank & service labels
#+BEGIN_SRC sh
  #@description The Geometry Service label
  Geo_label : string = "Geo"

  #@description The 'Simulated data' bank label in the event record
  SD_label  : string = "SD"

  #@description Flag to allow cleaning of some former simulated data bank if any (default: 0)
  erase_former_SD_bank : boolean = 0
#+END_SRC
*** Seed values
#+BEGIN_SRC sh
  #@description The simulation manager PRNG seed
  manager.seed                  : integer = 0

  #@description The vertex generator PRNG seed
  manager.vertex_generator_seed : integer = 0

  #@description The event generator PRNG seed
  manager.event_generator_seed  : integer = 0

  #@description The SHPF PRNG seed
  manager.shpf_seed             : integer = 0

  #@description The saving of PRNG seeds
  manager.output_prng_seeds_file  : string as path = "/tmp/${USER}/hpge.d/prng_seeds.save"

  #@description The saving of PRNG states
  manager.output_prng_states_file : string as path = "/tmp/${USER}/hpge.d/prng_states.save"

  #@description The modulo for PRNG states backup
  manager.prng_states_save_modulo : integer = 10
#+END_SRC
*** G4 manager
#+BEGIN_SRC sh
  #@description The simulation manager configuration file
  manager.configuration_filename : string as path = \
      "@HPGE_SIMULATION_DIR@/config/simulation/g4_manager.conf"
#+END_SRC
**** Configuration
:PROPERTIES:
:MKDIRP: yes
:TANGLE: config/simulation/g4_manager.conf
:END:
***** Preamble
#+BEGIN_SRC sh
  #@description The list of configuration for internal components of Geant4 manager
  #@key_label   "name"
  #@meta_label  ""
#+END_SRC
***** Manager section
#+BEGIN_SRC sh
  [name="manager"]

  #@description Logging priority
  logging.priority      : string = "warning"

  #@description Number of events to be simulated (superseded by the pipeline)
  number_of_events      : integer = 20

  #@description Geant4 tracking verbosity flag (from 0 to 10):
  g4_tracking_verbosity : integer = 0

  #@description Geant4 visualization activation flag:
  g4_visualization      : boolean = 0
#+END_SRC
***** Event generator section
#+BEGIN_SRC sh
  [name="event_generator"]

  #@description Configuration file for the embedded '::genbb::manager'
  manager.config : string as path = \
    "@HPGE_SIMULATION_DIR@/config/simulation/event_generator_manager.conf"
#+END_SRC
***** Vertex generator section
#+BEGIN_SRC sh
  [name="vertex_generator"]

  #@description Main configuration file for the vertex generator manager
  manager.config : string as path = \
    "@HPGE_SIMULATION_DIR@/config/simulation/vertex_generator_manager.conf"
#+END_SRC
***** Detector construction
#+BEGIN_SRC sh
  [name="detector_construction"]

  #@description Main configuration file for the detector construction user object:

  #@description Logging priority
  logging.priority : string = "warning"

  #@description Temporary directory for GDML file generation:
  gdml.tmp_dir         : string as path = "/tmp/${USER}/g4.d"

  #@description Access mode to the GDML schema ("local" or "remote")
  gdml.schema_location : string = "local" # "remote"

  #@description Flag to skip GDML validation
  gdml.no_validation   : boolean = 0

  #@description Logging support for step hit processor factory
  hit_processor_factory.logging.priority : string = "warning"

  #@description Configuration file for the step hit processor factory:
  hit_processor_factory.config : string as path = \
    "@HPGE_SIMULATION_DIR@/config/simulation/step_hit_processor_factory.conf"

  #@description Parameters for the generation of 'sensitive hits' through 'sensitive detectors' :
  sensitive.detectors : string[1] = "germanium_SD"

  sensitive.germanium_SD.logging.priority               : string = "warning"
  sensitive.germanium_SD.hits_buffer_capacity           : integer = 1000
  sensitive.crystal_SD.record_alpha_quenching           : boolean = 0
  sensitive.germanium_SD.record_track_id                : boolean = 1
  sensitive.germanium_SD.record_primary_particle        : boolean = 1
  sensitive.germanium_SD.drop_zero_energy_deposit_steps : boolean = 0
  sensitive.germanium_SD.track_gamma                    : boolean = 1
  sensitive.germanium_SD.track_neutron                  : boolean = 1
#+END_SRC
***** Physics list
#+BEGIN_SRC sh
  [name="physics_list"]

  #@description Main configuration file for the physics lists:

  #@description Logging priority
  logging.priority : string = "warning"

  #@description List of physics constructors
  physics_constructors.names : string[2] = "particles" "em"

  #@description Class ID of the physics constructors named 'particles'
  physics_constructors.particles.id     : string = "mctools::g4::particles_physics_constructor"

  #@description Configuration file of the physics constructors named 'particles'
  physics_constructors.particles.config : string as path = \
    "@HPGE_SIMULATION_DIR@/config/simulation/physics_list_particles.conf"

  #@description Class ID of the physics constructors named 'em'
  physics_constructors.em.id            : string = "mctools::g4::em_physics_constructor"

  #@description Configuration file of the physics constructors named 'em'
  physics_constructors.em.config        : string as path = \
    "@HPGE_SIMULATION_DIR@/config/simulation/physics_list_em_processes.conf"
#+END_SRC
***** Run, event, tracking... actions
#+BEGIN_SRC sh
  [name="run_action"]

  #@description Logging priority :
  logging.priority : string = "warning"

  #@description If set, this flag forbids the generation of output files :
  file.no_save : boolean = 1

  [name="event_action"]

  #@description Logging priority :
  logging.priority : string = "warning"

  [name="primary_generator_action"]

  #@description Primary generator action logging priority
  logging.priority : string = "warning"

  [name="tracking_action"]

  #@description Primary generator action logging priority
  logging.priority : string = "warning"

  [name="stepping_action"]

  #@description Primary generator action logging priority
  logging.priority : string = "warning"

  [name="stacking_action"]

  #@description Primary generator action logging priority
  logging.priority : string = "warning"
 #+END_SRC
**** Physics list
***** Particles
:PROPERTIES:
:TANGLE: config/simulation/physics_list_particles.conf
:END:
#+BEGIN_SRC sh
  #@config Configuration parameters for the particles Geant4 physics constructor

  #@description The activation flag for geantinos (neutral and charged, default: 0)
  #use_geantinos               : boolean = 0

  #@description The activation flag for optical photons (default: 0)
  #use_optical_photons         : boolean = 0

  #@description The activation flag for muon leptons (default: 0)
  #use_muon_leptons         : boolean = 0

  #@description The activation flag for tau leptons (default: 0)
  #use_tau_leptons          : boolean = 0

  #@description The activation flag for light mesons (default: 0)
  #use_light_mesons         : boolean = 0

  #@description The activation flag for charm mesons (default: 0)
  #use_charm_mesons         : boolean = 0

  #@description The activation flag for bottom mesons (default: 0)
  #use_bottom_mesons        : boolean = 0

  #@description The activation flag for nucleons (default: 1)
  #use_nucleons             : boolean = 1

  #@description The activation flag for strange baryons (default: 0)
  #use_strange_baryons      : boolean = 0

  #@description The activation flag for charm baryons (default: 0)
  #use_charm_baryons        : boolean = 0

  #@description The activation flag for bottom baryons (default: 0)
  #use_bottom_baryons       : boolean = 0

  #@description The activation flag for light nuclei (default: 1)
  #use_light_nuclei         : boolean = 1

  #@description The activation flag for light anti-nuclei (default: 0)
  #use_light_anti_nuclei    : boolean = 0

  #@description The activation flag for generic ion (default: 0)
  use_generic_ion          : boolean = 1
#+END_SRC
***** EM processes
:PROPERTIES:
:TANGLE:   config/simulation/physics_list_em_processes.conf
:END:
#+BEGIN_SRC sh
  #@config Configuration parameters for the electro-magnetic Geant4 physics constructor

  #@description Electro-magntox interaction model (value in: "standard", "low_energy", "penelope")
  #em.model : string = "standard"

  #@description The activation flag for electron/positron energy loss process
  #em.electron.energy_loss         : boolean = 1

  #@description The activation flag for electron/positron multiple scaterring process
  #em.electron.multiple_scaterring : boolean = 1

  #@description The activation flag for electron/positron bremsstrahlung process
  #em.electron.bremsstrahlung      : boolean = 1

  #@description The activation flag for positron pannihilation
  #em.positron.annihilation        : boolean = 1

  ################
  # Deexcitation #
  ################

  #@description The activation flag for deexcitation fluorescence process
  #em.deexcitation.fluo         : boolean = 0

  #@description The activation flag for Auger process
  #em.deexcitation.auger        : boolean = 0

  #@description The activation flag for PIXE
  #em.deexcitation.pixe         : boolean = 0

  #@description The activation model for PIXE cross-sections
  #em.deexcitation.pixe.model   : string = "Empirical"

  ###########################
  # Deexcitation per region #
  ###########################

  #@description The regions where to apply some deexcitation process
  #em.deexcitation.regions    : string[2] = "A" "B"

  #@description The activation flag for deexcitation fluorescence process in region "A"
  #em.deexcitation.regions.A.fluo : boolean = 1

  #@description The activation flag for Auger process in region "A"
  #em.deexcitation.regions.A.auger : boolean = 1

  #@description The activation flag for PIXE in region "A"
  #em.deexcitation.regions.A.pixe : boolean = 1

  #@description The activation flag for deexcitation fluorescence process in region "B"
  #em.deexcitation.regions.B.fluo : boolean = 1

  #@description The activation flag for Auger process in region "B"
  #em.deexcitation.regions.B.auger : boolean = 1

  #@description The activation flag for PIXE in region "B"
  #em.deexcitation.regions.B.pixe : boolean = 1
#+END_SRC

**** Step hit processors
:PROPERTIES:
:TANGLE: config/simulation/step_hit_processor_factory.conf
:END:
***** Preamble
#+BEGIN_SRC sh
  #@description A list of simulated step hit processors
  #@key_label   "name"
  #@meta_label  "type"
#+END_SRC
***** Crystal hit processor
#+BEGIN_SRC sh
  [name="crystal.hit_processor" type="mctools::calorimeter_step_hit_processor"]

  #@config The step hit processor for the crystal simulated hits

  logging.priority      : string = "warning"
  hit.category          : string = "scin.hit"
  #hit.category          : string = "crystal.hit"
  sensitive.category    : string = "germanium_SD"
  mapping.category      : string = "germanium.category"

  use_private_pool      : boolean = 1
  private_pool_capacity : integer = 10

  cluster.time_range    : real as time   = 1.0 ns
  cluster.space_range   : real as length = 10.0 mm
#+END_SRC
***** Visualization hit processors
#+BEGIN_SRC sh
  [name="all.volumes.visu.hit_processor" type="mctools::push_all_step_hit_processor"]

  #@config The step hit processor for collecting all the visu hits

  logging.priority     : string  = "warning"
  hit.category         : string  = "__visu.tracks"
  sensitive.category   : string  = "__all.volumes.SD"
  geometry.volumes.all : boolean = 1
  #geometry.volumes.excluded : string[0] = "field_wire.model.log" "anode_wire.model.log"
#+END_SRC
*** Vertex generator
#+BEGIN_SRC sh
  #@description The vertex generator PRNG label
  manager.vertex_generator_name : string  = "source_bulk"
#+END_SRC
**** Manager configuration
:PROPERTIES:
:TANGLE: config/simulation/vertex_generator_manager.conf
:END:
#+BEGIN_SRC sh
  #@config Configuration of the genvtx::manager class

  #@description Logging priority
  logging.priority : string = "warning"

  #@description Embeded PRNG seed
  prng_seed : integer = 12345

  #@description Embeded PRNG type (default is "taus2", fast and good quality)
  prng_id : string = "taus2"

  #@description The list of files that contain the rules for vertex generators
  vg_list : string[1] as path = \
    "@HPGE_SIMULATION_DIR@/config/simulation/vertex_generators.conf"
#+END_SRC
**** Vertex generator definitions
:PROPERTIES:
:TANGLE: config/simulation/vertex_generators.conf
:END:
***** Preamble
#+BEGIN_SRC sh
  #@description A list of vertex generators
  #@key_label   "name"
  #@meta_label  "type"
#+END_SRC
***** Point source vertex
Generate vertex from an arbitrary point of the experimental setup
#+BEGIN_SRC sh
  [name="point_source" type="genvtx::spot_vertex_generator"]

  #@description Logging priority
  logging.priority  : string = "warning"

  #@description X position of the spot
  spot.x : real as length = -280.0 mm

  #@description Y position of the spot
  spot.y : real as length =    0.0 mm

  #@description Z position of the spot
  spot.z : real as length =    0.0 mm
#+END_SRC
***** Source bulk
Generate vertex in the bulk volume of the sample
#+BEGIN_SRC sh
  [name="source_bulk" type="genvtx::cylinder_model_vg"]

  #@description Logging priority
  logging.priority  : string = "warning"

  #@description The rule that describes the geometry origin of vertex in term of geometry category and addresses (geom ID)
  origin : string  = "category=source.category"

  #@description The mode used for vertex generator from the underlying box model associated to the target logical volume ("surface" or "bulk")
  mode   : string  = "bulk"
#+END_SRC
*** Event generator
#+BEGIN_SRC sh
  #@description The event generator PRNG label
  manager.event_generator_name  : string  = "bkg_Tl208"
#+END_SRC
**** Manager configuration
:PROPERTIES:
:TANGLE: config/simulation/event_generator_manager.conf
:END:
#+BEGIN_SRC sh
  #@config Main configuration parameters for the genbb manager

  #@description Logging priority
  logging.priority : string = "warning"

  #@description List of files containing particle generator definition rules
  generators.configuration_files : string[2] as path =       \
    "@HPGE_SIMULATION_DIR@/config/simulation/event_generator_backgrounds.conf" \
    "@HPGE_SIMULATION_DIR@/config/simulation/event_generator_misc.conf"
#+END_SRC
**** Event generator definitions
***** Background events
:PROPERTIES:
:TANGLE: config/simulation/event_generator_backgrounds.conf
:END:
#+BEGIN_SRC sh
  #@description A sample list of event generators
  #@key_label   "name"
  #@meta_label  "type"
#+END_SRC
****** \nbsp^{208}Tl
#+BEGIN_SRC sh
  [name="bkg_Tl208" type="genbb::wdecay0"]
  decay_type      : string  ="background"
  decay_isotope   : string  = "Tl208"
  #energy_min      : real as energy = 0.0 MeV
  #energy_max      : real as energy = 5.0 MeV
#+END_SRC
****** \nbsp^{234}Th
#+BEGIN_SRC sh
  [name="bkg_Th234" type="genbb::wdecay0"]
  decay_type      : string  ="background"
  decay_isotope   : string  = "Th234"
#+END_SRC
****** \nbsp^{214}Pb
#+BEGIN_SRC sh
  [name="bkg_Pb214" type="genbb::wdecay0"]
  decay_type      : string  ="background"
  decay_isotope   : string  = "Pb214"
#+END_SRC
****** \nbsp^{214}Bi
#+BEGIN_SRC sh
  [name="bkg_Bi214" type="genbb::wdecay0"]
  decay_type      : string  ="background"
  decay_isotope   : string  = "Bi214"
#+END_SRC
****** \nbsp^{210}Pb
#+BEGIN_SRC sh
  [name="bkg_Pb210" type="genbb::wdecay0"]
  decay_type      : string  ="background"
  decay_isotope   : string  = "Pb210"
#+END_SRC
****** \nbsp^{210}Pb+\nbsp^{210}Bi
#+BEGIN_SRC sh
  [name="bkg_Pb210_Bi210" type="genbb::wdecay0"]
  decay_type      : string  ="background"
  decay_isotope   : string  = "Pb210+Bi210"
#+END_SRC
****** \nbsp^{212}Pb
#+BEGIN_SRC sh
  [name="bkg_Pb212" type="genbb::wdecay0"]
  decay_type      : string  ="background"
  decay_isotope   : string  = "Pb212"
#+END_SRC
****** \nbsp^{212}Bi+\nbsp^{212}Po
#+BEGIN_SRC sh
  [name="bkg_Bi212_Po212" type="genbb::wdecay0"]
  decay_type      : string  ="background"
  decay_isotope   : string  = "Bi212+Po212"
#+END_SRC
****** \nbsp^{214}Bi+\nbsp^{214}Po
#+BEGIN_SRC sh
  [name="bkg_Bi214_Po214" type="genbb::wdecay0"]
  decay_type      : string  ="background"
  decay_isotope   : string  = "Bi214+Po214"
#+END_SRC
****** \nbsp^{22}Na
#+BEGIN_SRC sh
  [name="bkg_Na22" type="genbb::wdecay0"]
  decay_type      : string  ="background"
  decay_isotope   : string  = "Na22"
#+END_SRC
****** \nbsp^{54}Mn
#+BEGIN_SRC sh
  [name="bkg_Mn54" type="genbb::wdecay0"]
  decay_type      : string  ="background"
  decay_isotope   : string  = "Mn54"
#+END_SRC
***** Misc. generators
:PROPERTIES:
:TANGLE: config/simulation/event_generator_misc.conf
:END:
#+BEGIN_SRC sh
  #@description A sample list of event generators
  #@key_label   "name"
  #@meta_label  "type"
#+END_SRC
****** Electron with 1-2 MeV flat energy
#+BEGIN_SRC sh
  [name="electron_1-2MeV_flat" type="genbb::single_particle_generator"]

  #@config Parameters for the "single_particle" mode (class genbb::single_particle_generator):

  #@description Generated particle ("electron", "positron", "gamma", "alpha"):
  particle_name         : string = "electron"

  #@description Mode ("energy_range", "gaussian_energy", "monokinetic"):
  mode                  : string = "energy_range"

  #@description Flag to randomize the direction of the emitted particle (in 4xPi)
  randomized_direction   : boolean = 0

  ### Only for "energy_range" mode:
  min_energy            : real as energy = 1000. keV
  max_energy            : real as energy = 2000. keV
#+END_SRC
****** 1 MeV electron beam
#+BEGIN_SRC sh
  [name="electron_1MeV" type="genbb::single_particle_generator"]
  particle_name         : string = "electron"
  mode                  : string = "monokinetic"
  energy                : real as energy = 1000. keV
  randomized_direction  : boolean = 1
#+END_SRC
****** 27 keV gamma beam
#+BEGIN_SRC sh
  [name="gamma_27keV" type="genbb::single_particle_generator"]
  particle_name         : string = "gamma"
  mode                  : string = "monokinetic"
  energy                : real as energy = 27.0 keV
  randomized_direction  : boolean = 1
#+END_SRC
****** 186 keV gamma beam
#+BEGIN_SRC sh
  [name="gamma_186keV" type="genbb::single_particle_generator"]
  particle_name         : string = "gamma"
  mode                  : string = "monokinetic"
  energy                : real as energy  = 186.11 keV
  randomized_direction  : boolean = 1
#+END_SRC
****** 352 keV gamma beam
#+BEGIN_SRC sh
  [name="gamma_352keV" type="genbb::single_particle_generator"]
  particle_name         : string = "gamma"
  mode                  : string = "monokinetic"
  energy                : real as energy = 352.0 keV
  randomized_direction  : boolean = 1
#+END_SRC
****** 1 GeV muon beam
#+BEGIN_SRC sh
  [name="muon_1GeV" type="genbb::single_particle_generator"]
  particle_name         : string = "mu-"
  mode                  : string = "monokinetic"
  energy                : real as energy = 1.0 GeV
  randomized_direction  : boolean = 1
#+END_SRC
** Analysis modules
:PROPERTIES:
:TANGLE: config/pipeline/analysis_modules.conf
:END:
*** File preamble
#+BEGIN_SRC sh
  #@description A sample list of setups
  #@key_label   "name"
  #@meta_label  "type"
#+END_SRC
*** Basic analysis module
#+BEGIN_SRC sh
  [name="basic_analysis_module" type="hpge::basic_analysis_module"]

  #@config A basic module to process simulated data for HPGe detector

  #@description Logging flag
  logging.priority : string = "warning"

  #@description The label of the 'Simulated Data' bank
  SD_label : string  = "SD"

  #@description The file name
  ROOT_filename : string as path = "/tmp/${USER}/hpge.d/hpge_analysis.root"
#+END_SRC
*** Simulation \to Analysis chain
#+BEGIN_SRC sh
  [name="hpge_chain" type="dpp::chain_module"]

  #@description Logging flag
  logging.priority : string = "warning"

  #@description The list of processing modules to be applied (in this order) :
  modules : string [2] = \
      "simulation"       \
      "basic_analysis_module"

#+END_SRC
* Services
:PROPERTIES:
:TANGLE: config/pipeline/services.conf
:END:

A service generally hosts a specific resource that can be shared by many other
software components, including other services or data processing modules (see
[[https://nemo.lpc-caen.in2p3.fr/wiki/SNSW_SNailWare_FAQ#Whatisaservice][SN@ilWare FAQ]]).

** Preamble

#+BEGIN_SRC sh
  #@description A sample list of setups
  #@key_label   "name"
  #@meta_label  "type"
#+END_SRC

** Context service

#+BEGIN_SRC sh
  [name="Ctx" type="dpp::context_service"]

  #@description Logging priority
  logging.priority : string = "warning"

  #@description File from which the context is to be loaded at program start
  load.file : string as path  = "/tmp/${USER}/snemo.d/snemo_context.conf"

  #@description File to store the context at program termination
  store.file : string as path = "/tmp/${USER}/snemo.d/snemo_context_end.conf"

  #@description Flag to backup the former context load file
  backup.file : string as path = "/tmp/${USER}/snemo.d/snemo_context_bak.conf"
#+END_SRC

** Geometry service

The following code block declares the geometry service to properly load all the
geometry and material construction of the detector. This service, only declared
here, can be used by several operations like calibration, and other related
reconstruction modules ... but all of them will use the same geometry.

#+BEGIN_SRC sh
  [name="Geo" type="geomtools::geometry_service"]

  #@description Logging priority
  logging.priority : string = "warning"

  #@description Embedded SuperNEMO geometry manager main configuration file
  manager.configuration_file : string as path = \
      "@HPGE_SIMULATION_DIR@/config/geometry/manager.conf"

  #@description Embedded SuperNEMO geometry manager must build its mapping lookup table
  manager.build_mapping : boolean = 1

  #@description Embedded geometry manager's mapping lookup table does not exclude any geometry category
  manager.no_excluded_categories : boolean = 1
#+END_SRC

* Running SN@ilWare processing chain
** Tangling configuration
First, you need to tangle this file. As explained in the [[Content][Content]] section, you
may use the dedicated =Makefile= to generate the pipeline configuration. Just
run =make= within this working directory.

** Source code compilation
Second, you need to compile the =hpge_simulation= module files. The build
system used is =cmake= and a =CMakeLists.txt= file is provided to correctly
setup the dependencies. Nevertheless, this implies that you have already and
correctly installed [[https://nemo.lpc-caen.in2p3.fr/wiki/Software/Cadfael][Cadfael]] and [[https://nemo.lpc-caen.in2p3.fr/wiki/Software/Bayeux][Bayeux]] setups. Then, you can configure, build
and install the =hpge_simulation= module by doing
#+BEGIN_SRC sh
  mkdir {build,install} && cd build
  cmake                                               \
      -DCMAKE_PREFIX_PATH="<path to Bayeux install>"  \
      -DCMAKE_INSTALL_PREFIX=../install               \
      ../source
  make install
  cd ..
#+END_SRC

** Use and execute =hpge_simulation= module
After a successful build, you will get an =install= directory holding the
=libhpge_simulation.so= file. Assuming you are under =bash= shell, you will
need to add it to your =LD_LIBRARY_PATH= by doing
#+BEGIN_SRC sh
  export LD_LIBRARY_PATH=${PWD}/install/lib:${LD_LIBRARY_PATH}
#+END_SRC

Another approach, maybe less intrusive, will be to set the =LD_LIBRARY_PATH=
when running the =dpp_processing= binary. You can for example write something
like
#+BEGIN_SRC sh
  LD_LIBRARY_PATH=${PWD}/install/lib:${LD_LIBRARY_PATH} dpp_processing ...
#+END_SRC

Running processing pipeline is done by the =dpp_processing= program provided by
=dpp= library. Its call is pretty simple and only implies to have a module
manager file and the name of the module to be run /i.e./
=hpge_simulation_module=. Nevertheless, you need to dynamically load the
library(ies) which holds the needed modules.

#+BEGIN_SRC sh
  dpp_processing                                                       \
      --module-manager-config $PWD/config/pipeline/module_manager.conf \
      --module hpge_simulation_module                                  \
      --load-dll hpge_simulation                                       \
      --load-dll <library>_bio
#+END_SRC

=<library>_bio= represents libraries which holds event data models such as
=mctools_bio=. You can use the =dlls.conf= file built in section [[DLL loader]] by
writing

#+BEGIN_SRC sh
  dpp_processing                                                       \
      --module-manager-config $PWD/config/pipeline/module_manager.conf \
      --module hpge_simulation_module                                 \
      --load-dll hpge_simulation                                      \
      --dll-config $PWD/config/pipeline/dlls.conf
#+END_SRC

It will run the =hpge_simulation_module= and it will generate a ROOT file
containing several histograms. This file is located by default, in
=/tmp/${USER}/snemo.d= directory under the =hpge_simulation_histos.root=
name. You can change the output directory and output file name in [[Histogram
service][this section]].

* Footnotes

[fn:1] We recommend that you name any sensitive category with the =_SD=
 suffix. This is to ease the reading of other configuration files at the
 simulation level (step hit processors). Also note that if you prefix the
 sensitive category name with two underscores (example: =__test_SD=), then the
 sensitive category is considered as "private" (non official) and may be
 processed in some special way by the simulation engine.
